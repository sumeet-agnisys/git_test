//Agnisys, Inc. ***** Copyright 2018 All Rights Reserved. *****
//
//*** This file is auto generated by IDesignSpec (http://www.agnisys.com) . Please do not edit this file. ***
// created on        : 2019-12-09T19:50:37.371+05:30
// created by        :
// generated by      : Saurabh
// generated from    : F:\testGit\git_test\Sample467\test514\fas.idsng
// IDesignSpec rev   : idsbatch v 6.16.4.7

//*** This code is generated with following settings ***
// Reg Width                  : 32
// Address Unit               : 8
// C++ Types int              : hwint
// Bus Type                   : PROPRIETARY
// BigEndian                  : false
// LittleEndian               : false
// Dist. Decode and Readback  : false
//---------------------------------------------------------------------------------------------------------------
/*----------------------------------------------------------------------
Class       : fas_dsfsfsdf
-----------------------------------------------------------------------*/

`ifndef CLASS_fas_dsfsfsdf
`define CLASS_fas_dsfsfsdf
class fas_dsfsfsdf extends uvm_reg;
    `uvm_object_utils(fas_dsfsfsdf)

    rand uvm_reg_field rw;

    // Function : new
    function new(string name = "fas_dsfsfsdf");
        super.new(name, 32, build_coverage(UVM_NO_COVERAGE));
        add_coverage(build_coverage(UVM_NO_COVERAGE));            //Added because build coverage in the line above doesn’t work due to a bug in UVM 1.1 library

    endfunction

    // Function : build
    virtual function void build();
        this.rw = uvm_reg_field::type_id::create("rw");

        this.rw.configure(this, 32,  0, "RW", 0, 32'd0, 1, 1, 0);

    endfunction
endclass
`endif

/*----------------------------------------------------------------------
Class       : fas_abcasdasd

Description : fdsf
-----------------------------------------------------------------------*/

`ifndef CLASS_fas_abcasdasd
`define CLASS_fas_abcasdasd
class fas_abcasdasd extends uvm_reg;
    `uvm_object_utils(fas_abcasdasd)

    rand uvm_reg_field jhvb;

    // Function : new
    function new(string name = "fas_abcasdasd");
        super.new(name, 16, build_coverage(UVM_NO_COVERAGE));
        add_coverage(build_coverage(UVM_NO_COVERAGE));            //Added because build coverage in the line above doesn’t work due to a bug in UVM 1.1 library

    endfunction

    // Function : build
    virtual function void build();
        this.jhvb = uvm_reg_field::type_id::create("jhvb");

        this.jhvb.configure(this, 1,  15, "RW", 0, 1'd0, 1, 1, 0);

    endfunction
endclass
`endif

/*----------------------------------------------------------------------
Class      : fas_block
-----------------------------------------------------------------------*/
`ifndef CLASS_fas_block
`define CLASS_fas_block
class fas_block extends uvm_reg_block;
    `uvm_object_utils(fas_block)

    rand fas_dsfsfsdf dsfsfsdf;

    rand fas_abcasdasd abcasdasd;

    // Function : new
    function new(string name = "fas_block");
        super.new(name, UVM_NO_COVERAGE);
    endfunction

    // Function : build
    virtual function void build();
        //DSFSFSDF
        dsfsfsdf   =   fas_dsfsfsdf::type_id::create("dsfsfsdf");
        dsfsfsdf.configure(this, null, "dsfsfsdf");
        dsfsfsdf.build();

        //ABCASDASD
        abcasdasd   =   fas_abcasdasd::type_id::create("abcasdasd");
        abcasdasd.configure(this, null, "abcasdasd");
        abcasdasd.build();

        //define default map and add reg/regfiles
        default_map= create_map("default_map", 'h0, 4, UVM_LITTLE_ENDIAN, 1);
        default_map.add_reg(dsfsfsdf, 'h0, "RW");
        default_map.add_reg(abcasdasd, 'h4, "RW");

        lock_model();
    endfunction

endclass : fas_block
`endif
