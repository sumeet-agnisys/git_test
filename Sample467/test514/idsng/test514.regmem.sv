//Agnisys, Inc. ***** Copyright 2018 All Rights Reserved. *****
//
//*** This file is auto generated by IDesignSpec (http://www.agnisys.com) . Please do not edit this file. ***
// created on        : 2019-11-15T15:22:54.75+05:30
// created by        :
// generated by      : Saurabh
// generated from    : F:\testGit\git_test\Sample467\test514\test514.idsng
// IDesignSpec rev   : idsbatch v 6.16.4.7

//*** This code is generated with following settings ***
// Reg Width                  : 32
// Address Unit               : 8
// C++ Types int              : hwint
// Bus Type                   : PROPRIETARY
// BigEndian                  : false
// LittleEndian               : false
// Dist. Decode and Readback  : false
//---------------------------------------------------------------------------------------------------------------
/*----------------------------------------------------------------------
Class       : test514_reg_hello123
-----------------------------------------------------------------------*/

`ifndef CLASS_test514_reg_hello123
`define CLASS_test514_reg_hello123
class test514_reg_hello123 extends uvm_reg;
    `uvm_object_utils(test514_reg_hello123)

    rand uvm_reg_field f;

    // Function : new
    function new(string name = "test514_reg_hello123");
        super.new(name, 32, build_coverage(UVM_NO_COVERAGE));
        add_coverage(build_coverage(UVM_NO_COVERAGE));            //Added because build coverage in the line above doesnâ€™t work due to a bug in UVM 1.1 library

    endfunction

    // Function : build
    virtual function void build();
        this.f = uvm_reg_field::type_id::create("f");

        this.f.configure(this, 32,  0, "RW", 0, 32'd0, 1, 1, 0);

    endfunction
endclass
`endif

/*----------------------------------------------------------------------
Class      : test514_block
-----------------------------------------------------------------------*/
`ifndef CLASS_test514_block
`define CLASS_test514_block
class test514_block extends uvm_reg_block;
    `uvm_object_utils(test514_block)

    rand test514_reg_hello123 reg_hello123;

    // Function : new
    function new(string name = "test514_block");
        super.new(name, UVM_NO_COVERAGE);
    endfunction

    // Function : build
    virtual function void build();
        //REG_HELLO123
        reg_hello123   =   test514_reg_hello123::type_id::create("reg_hello123");
        reg_hello123.configure(this, null, "reg_hello123");
        reg_hello123.build();

        //define default map and add reg/regfiles
        default_map= create_map("default_map", 'h0, 4, UVM_LITTLE_ENDIAN, 1);
        default_map.add_reg(reg_hello123, 'h0, "RW");

        lock_model();
    endfunction

endclass : test514_block
`endif
